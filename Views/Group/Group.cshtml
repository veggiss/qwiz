@model GroupViewModel

<div class="row text-center">
    <div class="col">
        <label class="text-muted">Created</label>
        <h5 class="lead">@Model.Group.CreationDate</h5>
    </div>
    <div class="col">
        <label class="text-muted">Name</label>
        <h5 class="lead">@Model.Group.Name</h5>
    </div>
    <div class="col">
        <label class="text-muted">Region</label>
        <h5 class="lead">@Model.Group.Region</h5>
    </div>
    <div class="col">
        <label class="text-muted">Members</label>
        <h5 class="lead">@Model.MembersCount</h5>
    </div>
</div>

<div id="requestBtnGroup">
    @if (!Model.WaitingRequest && Model.RoleText == null)
    {
        <button id="joinGroupBtn" class="m-3 btn btn-success">Join Group</button>   
    }
    else if (Model.WaitingRequest)
    {
        <button class="m-3 btn btn-success" disabled>Request Pending</button>
    } else if (Model.Role == 0)
    {
        <button id="deleteGroupBtn" class="m-3 btn btn-danger">Delete Group</button>
    } else if (Model.RoleText != null)
    {
        <button id="leaveGroupBtn" class="m-3 btn btn-danger">Leave Group</button>
    }
</div>

<div id="tabContent">
    @if (Model.Group.IsPublic || Model.RoleText != null) {
        <ul class="nav nav-tabs mt-2" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="members-tab" data-toggle="tab" href="#members" role="tab" aria-controls="members" aria-selected="true">Members</a>
            </li>
            
            @if (Model.Role < 2)
            {
                <li>
                    <a class="nav-link" id="invites-tab" data-toggle="tab" href="#invites" role="tab" aria-controls="invites" aria-selected="false">Pending invites</a>
                </li>
            }
        </ul>

        <div class="tab-content justify-content-center">
            <div class="tab-pane fade show active" id="members" role="tabpanel" aria-labelledby="members-tab">
                    <div class="m-3">
                        <label>Order by:</label>
                        <select class="onChangeCallback" id="orderBySelect">
                            <option value="role">Role</option>
                            <option value="level">Level</option>
                            <option value="joined">Joined</option>
                        </select>
                    </div>
                    <div class="d-flex justify-content-center">
                        <div class="w-100">
                            <membercard
                                v-for="(member, index) in members.entries"
                                v-bind:key="index"
                                v-bind:member="member"
                                v-bind:role="role"
                                v-on:request="requestGroup">
                            </membercard>
                            
                            <paginate v-if="members.pages > 1"
                                class="w-100 d-flex justify-content-center"
                                v-model="members.currentPage"
                                :page-count="members.pages"
                                :page-range="5"
                                :margin-pages="0"
                                :click-handler="membersCallback"
                                :prev-text="'Prev'"
                                :next-text="'Next'"
                                :container-class="'pagination'"
                                :page-class="'page-item'"
                                :page-link-class="'page-link'"
                                :next-link-class="'page-link'"
                                :prev-link-class="'page-link'"
                                :no-li-surround="false"
                                :first-last-button="true">
                            </paginate>
                        </div>
                    </div>
                </div>
    
                @if (Model.Role < 2) {
                    <div class="tab-pane fade" id="invites" role="tabpanel" aria-labelledby="invites-tab">
                        <div class="d-flex justify-content-center">
                            <div class="w-100">
                                <pendingcard
                                    v-for="(user, index) in invites.entries"
                                    v-bind:key="index"
                                    v-bind:user="user"
                                    v-on:answer="requestGroup">
                                </pendingcard>
                                
                                <paginate v-if="invites.pages > 1"
                                    class="w-100 d-flex justify-content-center"
                                    v-model="invites.currentPage"
                                    :page-count="invites.pages"
                                    :page-range="5"
                                    :margin-pages="0"
                                    :click-handler="invitesCallback"
                                    :prev-text="'Prev'"
                                    :next-text="'Next'"
                                    :container-class="'pagination'"
                                    :page-class="'page-item'"
                                    :page-link-class="'page-link'"
                                    :next-link-class="'page-link'"
                                    :prev-link-class="'page-link'"
                                    :no-li-surround="false"
                                    :first-last-button="true">
                                </paginate>
                            </div>
                        </div>
                    </div>
                }
            </div>
        
    }
    else
    {
        <h1 class="text-center mt-3">THIS GROUP IS PRIVATE</h1>
    }
</div>

@section Scripts
{
    <script>
        let model = {
            id: @Json.Serialize(Model.Group.Id),
            isPublic: @Json.Serialize(Model.Group.IsPublic),
            roleText: @Json.Serialize(Model.RoleText),
            role: @Json.Serialize(Model.Role)
        };
        console.log(model);
    </script>
    <script src="~/js/group/vueMembercard.js" asp-append-version="true"></script>
    <script src="~/js/group/vueInvitecard.js" asp-append-version="true"></script>
    <environment include="Development">
        <script src="~/js/group/group.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/group/group.min.js" asp-append-version="true"></script>
    </environment>
}
