@model List<Question>

<div id="app" style="margin: 0 auto; width: 555px;">
    <div class="text-center">
        <h1 class="display-4" style="font-size: 40px; width: 100%; text-align: center;">{{quiz[page].questionText}}</h1>
        <img style="display:block; margin:auto;" class="questionImgPrev" width="500" v-bind:src="quiz[page].imagePath"/>
    </div>
    
    <div id="progressBar" class="progress"></div>
    
    <div id="question">
        <div class="multiple_choice">
            <button id="btn_A" v-on:click="answer('A')" type="button" class="btn btn-outline-dark" style="margin: 5px; width: 47.8%">{{quiz[page].alternatives[0]}}</button>
            <button id="btn_B" v-on:click="answer('B')" type="button" class="btn btn-outline-dark" style="margin: 5px; width: 47.8%">{{quiz[page].alternatives[1]}}</button>
            <button id="btn_C" v-on:click="answer('C')" type="button" class="btn btn-outline-dark" style="margin: 5px; width: 47.8%">{{quiz[page].alternatives[2]}}</button>
            <button id="btn_D" v-on:click="answer('D')" type="button" class="btn btn-outline-dark" style="margin: 5px; width: 47.8%">{{quiz[page].alternatives[3]}}</button>
        </div>

        <div class="true_false" style="display: none">
            <button id="btn_true" v-on:click="answer('true')" type="button" class="btn btn-outline-dark" style="margin: 5px; width: 47.8%">True</button>
            <button id="btn_false" v-on:click="answer('false')" type="button" class="btn btn-outline-dark" style="margin: 5px; width: 47.8%">False</button>
        </div>
    </div>
    <button v-on:click="next" type="button" class="btn btn-dark" style="margin: 5px; width: 98%">Next</button>
    
    <div class="text-center">
        <h1>{{resultMsg}}</h1>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(() => {
            let quizForm = @Json.Serialize(Model);

            quizForm.forEach(e => {
                if (e.questionType === "multiple_choice") e.alternatives = JSON.parse(e.alternatives);
                else e.alternatives = ['', '', '', ''];
            });

            let app = new Vue({
                el: '#app',
                data: {
                    quiz: quizForm,
                    guessed: false,
                    page: 0,
                    correctAnswers: 0,
                    resultMsg: '',
                    finished: false
                },
                mounted: function() {
                    this.renderQuestion();
                },
                methods: {
                    answer: function(alt) {
                        let self = this;
                        if (!self.guessed && !self.finished) {
                            console.log("guessed");
                            let id = this.quiz[this.page].id;
                            axios.get(`/api/answer?id=${id}`).then(function(response) {
                                $("#btn_" + response.data).css("background-color", "#28a745");

                                if (response.data.toString() !== alt) self.wrongAnswer(alt);
                                else self.correctAnswer();

                                self.guessed = true;
                            });
                        }
                    },
                    next: function() {
                        if (this.guessed) {
                            if (this.page < this.quiz.length - 1) {
                                ['#btn_A', '#btn_B', '#btn_C', '#btn_D', '#btn_true', '#btn_false'].forEach(
                                    e => $(e).css("background-color", "transparent"));
                                this.page++;
                                this.guessed = false;
                            } else {
                                this.resultMsg = `${this.correctAnswers} of ${this.quiz.length} questions correct!`;
                                this.finished = true;
                            }

                            this.renderQuestion();
                        }
                    },
                    renderQuestion: function() {
                        if (quizForm[this.page].questionType === "multiple_choice") {
                            $(".multiple_choice").show();
                            $(".true_false").hide();
                        } else {
                            $(".multiple_choice").hide();
                            $(".true_false").show();
                        }
                    },
                    wrongAnswer: function(alt) {
                        $("#progressBar").append(`<div class="progress-bar bg-danger progress-bar-striped progress-bar-animated" role="progressbar" style="width: ${1 / this.quiz.length * 100}% "></div>`);
                        $("#btn_" + alt).css("background-color", "#dc3545");
                    },
                    correctAnswer: function() {
                        this.correctAnswers++;
                        $("#progressBar").append(`<div class="progress-bar bg-success progress-bar-striped progress-bar-animated" role="progressbar" style="width: ${1 / this.quiz.length * 100}%"></div>`);
                    }
                }
            });
        });
    </script>
}
