@model List<Quiz>

<h2 class="text-center">Quizzes of the day</h2>
<div id="carouselIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators position-relative m-0 align-text-top">
        <li data-target="#carouselIndicators" data-slide-to="0" class="active"></li>
        <li data-target="#carouselIndicators" data-slide-to="1"></li>
        <li data-target="#carouselIndicators" data-slide-to="2"></li>
    </ol>
    
    <div class="carousel-inner">
        <div class="carousel-item active">
            <div class="w-100 d-flex justify-content-center">
                @await Html.PartialAsync("Quiz/_QuizCardSinglePartial", @Model.ElementAt(0))
            </div>
        </div>
        <div class="carousel-item">
            <div class="w-100 d-flex justify-content-center">
                @await Html.PartialAsync("Quiz/_QuizCardSinglePartial", @Model.ElementAt(1))
            </div>
        </div>
        <div class="carousel-item">
            <div class="w-100 d-flex justify-content-center">
                @await Html.PartialAsync("Quiz/_QuizCardSinglePartial", @Model.ElementAt(2))
            </div>
        </div>
    </div>
    <a class="carousel-control-prev" href="#carouselIndicators" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselIndicators" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<br>


<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#categories">Categories</a>
    </li>
</ul>

<br>
    
<div id="tabContent" class="tab-content">
    <div class="tab-pane fade active show" id="categories">
        <div class="w-100">
            <div>
                <div class="form-row">
                    <div class="col form-group">
                        <label>Difficulty:</label>
                        <select class="form-control onChangeCallback" id="difficultySelect">
                            <option>Any Difficulty</option>
                            <option value="easy">Easy</option>
                            <option value="medium">Medium</option>
                            <option value="hard">Hard</option>
                        </select>
                    </div>

                    <div class="col form-group">
                        <label>Category:</label>
                        <select class="form-control onChangeCallback" id="categorySelect">
                        	<option>Any Category</option>
                            <option value="0">General Knowledge</option>
                            <option value="1">Entertainment: Books</option>
                            <option value="2">Entertainment: Film</option>
                            <option value="3">Entertainment: Music</option>
                            <option value="4">Entertainment: Musicals &amp; Theatres</option>
                            <option value="5">Entertainment: Television</option>
                            <option value="6">Entertainment: Video Games</option>
                            <option value="7">Entertainment: Board Games</option>
                            <option value="8">Science &amp; Nature</option>
                            <option value="9">Science: Computers</option>
                            <option value="10">Science: Mathematics</option>
                            <option value="11">Mythology</option>
                            <option value="12">Sports</option>
                            <option value="13">Geography</option>
                            <option value="14">History</option>
                            <option value="15">Politics</option>
                            <option value="16">Art</option>
                            <option value="17">Celebrities</option>
                            <option value="18">Animals</option>
                            <option value="19">Vehicles</option>
                            <option value="20">Entertainment: Comics</option>
                            <option value="21">Science: Gadgets</option>
                            <option value="22">Entertainment: Japanese Anime &amp; Manga</option>
                            <option value="23">Entertainment: Cartoon &amp; Animations</option>		
                        </select>
                    </div>
                    
                    <div class="col form-group">
                        <label>Order by:</label>
                        <select class="form-control onChangeCallback" id="orderBySelect">
                            <option value="views">Views</option>
                            <option value="upvotes">Upvotes</option>
                            <option value="recent">Recent</option>
                        </select>
                    </div>
                    
                    <div class="col form-group">
                        <label>Search:</label>
                        <input class="form-control" type="search" placeholder="Search" aria-label="Search">
                    </div>
                </div>
            </div>
        </div>
        
        <div class="w-100 d-flex justify-content-center">
            <div id="categoriesList" style="width: 996px;"></div>
        </div>
        
        <template>
            <paginate class="w-100 d-flex justify-content-center"
                      :page-count="categoriesPageCount"
                      :page-range="5"
                      :margin-pages="0"
                      :click-handler="categoriesCallback"
                      :prev-text="'Prev'"
                      :next-text="'Next'"
                      :container-class="'pagination'"
                      :page-class="'page-item'"
                      :page-link-class="'page-link'"
                      :next-link-class="'page-link'"
                      :prev-link-class="'page-link'"
                      :no-li-surround="false"
                      :first-last-button="true">
            </paginate>
        </template>
    </div>
</div>


<br>


@section Scripts
{
    <script>
        $(document).ready(function () {
            $('.carousel').carousel();
            
            let size = 6;
            let apiUrl = (path, obj) => {
                let url = path + '?';
                let s = '';
                
                obj.forEach((item, key) => {
                    if (item !== undefined || item !== undefined) url += `${s + key}=${item}`;
                    s = '&';
                });
                
                return url;
            };
            
            // tring username, int page, int size, string type, int categoryIndex, string difficulty, string orderBy
            Vue.component('paginate', VuejsPaginate);
            let app = new Vue({
                el: '#tabContent',
                data: {
                    categoriesPageCount: 1,
                },
                mounted: function() {
                    this.categoriesCallback(1);
                    
                    $(".onChangeCallback").change(() => this.categoriesCallback(1));
                },
                methods: {
                    categoriesCallback: function(page) {
                        let self = this;
                        
                        axios.get(apiUrl('/api/getQuizList', {
                            page: page,
                            size: size,
                            type: 'category',
                            difficulty: $("#difficultySelect option:selected").attr("value"),
                            categoryIndex: $("#categorySelect option:selected").attr("value"),
                            orderBy: $("#orderBySelect option:selected").attr("value"),
                        })).then(function(response) {
                            let pageCount = self.renderList('#categoriesList', response.data);
                            if (pageCount > 1) self.categoriesPageCount = pageCount;
                        });
                    },
                    
                    renderList: function(id, data) {
                        $(id).empty();
                        let result = $(id).html(data);
                        return parseInt($(result.find(".totalPages")[0]).attr("amount"));
                    }
                }
            });
        });
    </script>
}

